{"remainingRequest":"/Users/claytonmatulich/Desktop/Projects/vue-practice/quiz/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/claytonmatulich/Desktop/Projects/vue-practice/quiz/src/components/QuestionBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/claytonmatulich/Desktop/Projects/vue-practice/quiz/src/components/QuestionBox.vue","mtime":1561788589356},{"path":"/Users/claytonmatulich/Desktop/Projects/vue-practice/quiz/node_modules/cache-loader/dist/cjs.js","mtime":1561692293423},{"path":"/Users/claytonmatulich/Desktop/Projects/vue-practice/quiz/node_modules/babel-loader/lib/index.js","mtime":1561692290707},{"path":"/Users/claytonmatulich/Desktop/Projects/vue-practice/quiz/node_modules/cache-loader/dist/cjs.js","mtime":1561692293423},{"path":"/Users/claytonmatulich/Desktop/Projects/vue-practice/quiz/node_modules/vue-loader/lib/index.js","mtime":1561692294150}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport _ from \"lodash\";\n\nexport default {\n  props: {\n    currentQuestion: Object,\n    next: Function,\n    increment: Function\n  },\n  data() {\n    return {\n      selectedIndex: null,\n      correctIndex: null,\n      shuffledAnswers: [],\n      answered: false\n\n    };\n  },\n  computed: {\n    answers() {\n      let answers = [...this.currentQuestion.incorrect_answers];\n      answers.push(this.currentQuestion.correct_answer);\n      return answers;\n    }\n  },\n  watch: {\n    currentQuestion: {\n      immediate: true,\n      handler() {\n        this.answered = false;\n        this.selectedIndex = null;\n        this.shuffleAnswers();\n      }\n    }\n  },\n  methods: {\n    selectAnswer: function(index) {\n      this.selectedIndex = index;\n      console.log(index);\n    },\n    submitAnswer: function(){\n      let isCorrect = false;\n      if(this.selectedIndex === this.correctIndex){\n        isCorrect = true;\n      }\n      this.answered = true;\n      this.increment(isCorrect);\n\n    },\n    shuffleAnswers: function() {\n      let answers = [\n        ...this.currentQuestion.incorrect_answers,\n        this.currentQuestion.correct_answer\n      ];\n      this.shuffledAnswers = _.shuffle(answers);\n      this.correctIndex = this.shuffledAnswers.indexOf(this.currentQuestion.correct_answer);\n    },\n    answerClass(index){\n      let answerClass = '';\n      if(!this.answered && this.selectedIndex === index){\n        answerClass = 'selected';\n      }else if (this.answered && this.correctIndex === index){\n        answerClass = 'correct';\n      }else if(this.answered && this.selectedIndex === index && this.correctIndex !== index){\n        answerClass = 'incorrect';\n      }\n\n      return answerClass;\n    }\n  }\n};\n",{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"QuestionBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"question-box-container\">\n    <b-jumbotron>\n      <template slot=\"lead\">{{currentQuestion.question}}</template>\n\n      <hr class=\"my-4\">\n\n      <b-list-group>\n        <b-list-group-item\n          v-for=\"(answer,index) in answers\"\n          :key=\"index\"\n          @click.prevent=\"selectAnswer(index)\"\n          :class=\"answerClass(index)\"\n\n        >\n          {{ answer}}\n        </b-list-group-item>\n      </b-list-group>\n\n      <b-button\n        variant=\"primary\"\n        @click=\"submitAnswer\"\n        :disabled=\"selectedIndex === null || answered\"\n        >\n        Submit\n      </b-button>\n\n      <b-button\n        @click=\"next\"\n        variant=\"success\"\n      >\n        Next\n      </b-button>\n    </b-jumbotron>\n  </div>\n</template>\n\n\n<script>\nimport _ from \"lodash\";\n\nexport default {\n  props: {\n    currentQuestion: Object,\n    next: Function,\n    increment: Function\n  },\n  data() {\n    return {\n      selectedIndex: null,\n      correctIndex: null,\n      shuffledAnswers: [],\n      answered: false\n\n    };\n  },\n  computed: {\n    answers() {\n      let answers = [...this.currentQuestion.incorrect_answers];\n      answers.push(this.currentQuestion.correct_answer);\n      return answers;\n    }\n  },\n  watch: {\n    currentQuestion: {\n      immediate: true,\n      handler() {\n        this.answered = false;\n        this.selectedIndex = null;\n        this.shuffleAnswers();\n      }\n    }\n  },\n  methods: {\n    selectAnswer: function(index) {\n      this.selectedIndex = index;\n      console.log(index);\n    },\n    submitAnswer: function(){\n      let isCorrect = false;\n      if(this.selectedIndex === this.correctIndex){\n        isCorrect = true;\n      }\n      this.answered = true;\n      this.increment(isCorrect);\n\n    },\n    shuffleAnswers: function() {\n      let answers = [\n        ...this.currentQuestion.incorrect_answers,\n        this.currentQuestion.correct_answer\n      ];\n      this.shuffledAnswers = _.shuffle(answers);\n      this.correctIndex = this.shuffledAnswers.indexOf(this.currentQuestion.correct_answer);\n    },\n    answerClass(index){\n      let answerClass = '';\n      if(!this.answered && this.selectedIndex === index){\n        answerClass = 'selected';\n      }else if (this.answered && this.correctIndex === index){\n        answerClass = 'correct';\n      }else if(this.answered && this.selectedIndex === index && this.correctIndex !== index){\n        answerClass = 'incorrect';\n      }\n\n      return answerClass;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.list-group {\n  margin-bottom: 20px;\n}\n.list-group-item:hover {\n  background: #eee;\n  cursor: pointer;\n}\n.btn {\n  margin: 0 5px;\n}\n\n.selected {\n  background: lightblue;\n}\n\n.correct {\n  background: lightgreen;\n}\n\n.incorrect {\n  background: red;\n}\n</style>\n"]}]}